{"is_source_file": true, "format": "Python", "description": "This file defines data models for a booking backend using Flask-SQLAlchemy. It includes models for User, Appointment, and Timeslot, along with associated relationships and methods for password management and timeslot status checks.", "external_files": ["flask_sqlalchemy", "werkzeug.security", "datetime"], "external_methods": ["generate_password_hash", "check_password_hash"], "published": ["User", "Appointment", "Timeslot"], "classes": [{"name": "User", "description": "Represents an application user with authentication details."}, {"name": "Appointment", "description": "Represents a booking made by a user for a specific timeslot."}, {"name": "Timeslot", "description": "Represents a scheduled time period available for booking."}], "methods": [{"name": "set_password(self, password)", "description": "Hashes and stores a user's password.", "scope": "User", "scopeKind": "class"}, {"name": "check_password(self, password)", "description": "Verifies a password against the stored hash.", "scope": "User", "scopeKind": "class"}, {"name": "is_past(self)", "description": "Determines whether the timeslot has already ended.", "scope": "Timeslot", "scopeKind": "class"}], "calls": ["generate_password_hash", "check_password_hash"], "search-terms": ["User model for authentication", "Timeslot booking", "SQLAlchemy models", "password hash", "appointment scheduling"], "state": 2, "file_id": 7, "knowledge_revision": 15, "git_revision": "", "ctags": [{"_type": "tag", "name": "Appointment", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^class Appointment(db.Model):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Timeslot", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^class Timeslot(db.Model):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^class User(db.Model):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    __tablename__ = 'appointments'$/", "file": true, "language": "Python", "kind": "variable", "scope": "Appointment", "scopeKind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    __tablename__ = 'timeslots'$/", "file": true, "language": "Python", "kind": "variable", "scope": "Timeslot", "scopeKind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    __tablename__ = 'users'$/", "file": true, "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "available", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    available = db.Column(db.Boolean, default=True)$/", "language": "Python", "kind": "variable", "scope": "Timeslot", "scopeKind": "class"}, {"_type": "tag", "name": "check_password", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    def check_password(self, password):$/", "language": "Python", "kind": "member", "signature": "(self, password)", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    created_at = db.Column(db.DateTime, default=datetime.utcnow)$/", "language": "Python", "kind": "variable", "scope": "Appointment", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    created_at = db.Column(db.DateTime, default=datetime.utcnow)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "created_by_admin", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    created_by_admin = db.relationship('User', backref=db.backref('created_timeslots', lazy=True/", "language": "Python", "kind": "variable", "scope": "Timeslot", "scopeKind": "class"}, {"_type": "tag", "name": "created_by_admin_id", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    created_by_admin_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=True)$/", "language": "Python", "kind": "variable", "scope": "Timeslot", "scopeKind": "class"}, {"_type": "tag", "name": "db", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^db = SQLAlchemy()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    email = db.Column(db.String(120), unique=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "end_time", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    end_time = db.Column(db.DateTime, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Timeslot", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    id = db.Column(db.Integer, primary_key=True)$/", "language": "Python", "kind": "variable", "scope": "Appointment", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    id = db.Column(db.Integer, primary_key=True)$/", "language": "Python", "kind": "variable", "scope": "Timeslot", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    id = db.Column(db.Integer, primary_key=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "is_admin", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    is_admin = db.Column(db.Boolean, default=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "is_past", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    def is_past(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Timeslot", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    name = db.Column(db.String(100), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "password_hash", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    password_hash = db.Column(db.String(256), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "set_password", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    def set_password(self, password):$/", "language": "Python", "kind": "member", "signature": "(self, password)", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "start_time", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    start_time = db.Column(db.DateTime, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Timeslot", "scopeKind": "class"}, {"_type": "tag", "name": "timeslot", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    timeslot = db.relationship('Timeslot', backref=db.backref('appointments', lazy=True))$/", "language": "Python", "kind": "variable", "scope": "Appointment", "scopeKind": "class"}, {"_type": "tag", "name": "timeslot_id", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    timeslot_id = db.Column(db.Integer, db.ForeignKey('timeslots.id'), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Appointment", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    user = db.relationship('User', backref=db.backref('appointments', lazy=True))$/", "language": "Python", "kind": "variable", "scope": "Appointment", "scopeKind": "class"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/models.py", "pattern": "/^    user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Appointment", "scopeKind": "class"}], "hash": "0a1dffc763d802af811862f1e22aba76", "format-version": 4, "code-base-name": "booking_backend", "filename": "booking_backend/app/models.py", "fields": [{"name": "__tablename__ = 'appointments'", "scope": "Appointment", "scopeKind": "class", "description": "unavailable"}, {"name": "__tablename__ = 'timeslots'", "scope": "Timeslot", "scopeKind": "class", "description": "unavailable"}, {"name": "__tablename__ = 'users'", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "available = db.Column(db.Boolean, default=True)", "scope": "Timeslot", "scopeKind": "class", "description": "unavailable"}, {"name": "created_at = db.Column(db.DateTime, default=datetime.utcnow)", "scope": "Appointment", "scopeKind": "class", "description": "unavailable"}, {"name": "created_by_admin = db.relationship('User', backref=db.backref('created_timeslots', lazy=True/", "scope": "Timeslot", "scopeKind": "class", "description": "unavailable"}, {"name": "created_by_admin_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=True)", "scope": "Timeslot", "scopeKind": "class", "description": "unavailable"}, {"name": "db = SQLAlchemy()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "email = db.Column(db.String(120), unique=True, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "end_time = db.Column(db.DateTime, nullable=False)", "scope": "Timeslot", "scopeKind": "class", "description": "unavailable"}, {"name": "id = db.Column(db.Integer, primary_key=True)", "scope": "Appointment", "scopeKind": "class", "description": "unavailable"}, {"name": "is_admin = db.Column(db.Boolean, default=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "name = db.Column(db.String(100), nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "password_hash = db.Column(db.String(256), nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "start_time = db.Column(db.DateTime, nullable=False)", "scope": "Timeslot", "scopeKind": "class", "description": "unavailable"}, {"name": "timeslot = db.relationship('Timeslot', backref=db.backref('appointments', lazy=True))", "scope": "Appointment", "scopeKind": "class", "description": "unavailable"}, {"name": "timeslot_id = db.Column(db.Integer, db.ForeignKey('timeslots.id'), nullable=False)", "scope": "Appointment", "scopeKind": "class", "description": "unavailable"}, {"name": "user = db.relationship('User', backref=db.backref('appointments', lazy=True))", "scope": "Appointment", "scopeKind": "class", "description": "unavailable"}, {"name": "user_id = db.Column(db.Integer, db.ForeignKey('users.id'), nullable=False)", "scope": "Appointment", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"15": ""}]}