{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for managing calendar timeslots within a Flask web application, including listing available timeslots, creating new ones, and deleting existing ones, with JWT-based authentication and admin privileges enforcement.", "external_files": ["../models", "../schemas"], "external_methods": ["db.session.add", "db.session.commit", "Timeslot.query", "Timeslot.query.get", "abort"], "published": ["blp"], "classes": [{"name": "TimeslotsList", "description": "Handles GET requests for listing available timeslots, with optional filtering based on user privileges."}, {"name": "TimeslotCreate", "description": "Handles POST requests for admins to create new timeslots, with conflict checks."}, {"name": "TimeslotDelete", "description": "Handles DELETE requests for admins to remove timeslots by ID."}], "methods": [{"name": "get(self)", "description": "Retrieves a list of timeslots, filtered to show only future ones for non-admin users.", "scope": "TimeslotsList", "scopeKind": "class"}, {"name": "post(self, timeslot_data)", "description": "Creates a new timeslot if the user has admin privileges, checking for overlaps.", "scope": "TimeslotCreate", "scopeKind": "class"}, {"name": "delete(self, timeslot_id)", "description": "Deletes a specified timeslot if the user has admin privileges.", "scope": "TimeslotDelete", "scopeKind": "class"}], "calls": ["get_jwt_identity", "Timeslot.query", "Timeslot.query.filter", "Timeslot.query.get", "abort", "db.session.add", "db.session.commit", "TimeslotSchema", "datetime.utcnow"], "search-terms": ["calendar.py", "Timeslot endpoints", "Timeslot management", "Flask MethodView calendar", "JWT admin check", "Timeslot creation", "overlap check"], "state": 2, "file_id": 10, "knowledge_revision": 29, "git_revision": "4e658352f729d8c390680c60ffebd9a2601e1b80", "revision_history": [{"24": ""}, {"29": "4e658352f729d8c390680c60ffebd9a2601e1b80"}], "ctags": [{"_type": "tag", "name": "TimeslotCreate", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/routes/calendar.py", "pattern": "/^class TimeslotCreate(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TimeslotDelete", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/routes/calendar.py", "pattern": "/^class TimeslotDelete(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TimeslotsList", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/routes/calendar.py", "pattern": "/^class TimeslotsList(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/routes/calendar.py", "pattern": "/^blp = Blueprint(\"Calendar & Timeslots\", \"calendar\", url_prefix=\"\\/calendar\", description=\"Calend/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/routes/calendar.py", "pattern": "/^    def delete(self, timeslot_id):$/", "language": "Python", "kind": "member", "signature": "(self, timeslot_id)", "scope": "TimeslotDelete", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/routes/calendar.py", "pattern": "/^    def get(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "TimeslotsList", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/schedulepro-1023-1032/booking_backend/app/routes/calendar.py", "pattern": "/^    def post(self, timeslot_data):$/", "language": "Python", "kind": "member", "signature": "(self, timeslot_data)", "scope": "TimeslotCreate", "scopeKind": "class"}], "hash": "7bfed8194a9551cee45bf088e2d6eee8", "format-version": 4, "code-base-name": "booking_backend", "filename": "booking_backend/app/routes/calendar.py", "fields": [{"name": "blp = Blueprint(\"Calendar & Timeslots\", \"calendar\", url_prefix=\"\\/calendar\", description=\"Calend/", "scope": "", "scopeKind": "", "description": "unavailable"}]}